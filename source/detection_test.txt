# -*- coding: utf-8 -*-
import time
import cv2

if __name__ == "__main__":
    start_time = time.time()
    img = cv2.imread('/home/barcelona/pervinco/test_code/sliding-window/images/stick_of_truth.jpg')
    img2 = img.copy()

    height = img.shape[0]
    width = img.shape[1]

    print('img shape : ', height, width)

    y_start = 0
    y_end = height
    y_step_size = int(width/10)

    x_contact = []
    y_contact = []

    print('-------------------------------------------------------------------')

    # 세로 선
    for x in range(0, width + y_step_size, y_step_size):
        # 시작점 (x, y) 끝점(x, y)
        cv2.line(img, (x, y_start), (x, y_end), (0, 0, 255))
        x_contact.append(x)
        print(x, y_start, x, y_end)

    print('-------------------------------------------------------------------')

    x_start = 0
    x_end = width
    x_step_size = int(height/10)

    # 가로 선
    for y in range(0, height + x_step_size, x_step_size):
        cv2.line(img, (x_start, y), (x_end, y), (255, 0, 0))
        y_contact.append(y)
        print(x_start, y, x_end, y)

    print('------------------------------------------------------------------')

    for i in range(0, len(x_contact)):
        cv2.circle(img, (x_contact[i], y_contact[i]), 5, (255, 255, 255), -1)

    print(x_contact, y_contact)

    # up x_contact은 0부터 y_contact은 역순 마지막 idx는 둘다 제거

    x_cont2, y_cont2 = x_contact[:-1], y_contact[:-1]

    # for i in range(0, len(x_cont2)):
        # x_cont2 += 80




    end_time = time.time()
    print(end_time - start_time)

    cv2.imshow('frame', img)
    cv2.waitKey(0)
    cv2.destroyAllWindows()


=====================================================================================================


idx = 80

for i in range(0, len(x_contact)):
    cv2.circle(img, (x_contact[i], y_contact[i]), 5, (255, 255, 255), -1)


for binary in range(0, 2):
    for i in range(0, len(x_contact)):
        if binary == 0:
            print(idx)
            for j in range(0, len(x_contact)):
                # print(x_contact[j], y_contact[j])
                cv2.circle(img, (x_contact[j] + idx, y_contact[j]), 5, (0, 255, 0), -1)
            idx += 80

        else:
            for j in range(0, len(x_contact)):
                # print(x_contact[j], y_contact[j])
                cv2.circle(img, (x_contact[j] - idx, y_contact[j]), 5, (255, 0, 255), -1)
            idx -= 80
            
            
            
            
    x_test = x_contact[:-1]
    for i in range(0, len(x_test)):
        x_test[i] += y_step_size
    y_test = y_contact[:-1]
    print('=================================================================')
    print(x_test, y_test)
    for i in range(0, len(x_test)):
        cv2.circle(img, (x_test[i], y_test[i]), 5, (0, 0, 0), -1)
    crop_img(img2, x_test, y_test)
    
    
    
    
    
    
    
# def crop_img(img, xp_list, yp_list):
#     for i in range(0, len(xp_list)):
#         if len(xp_list) > i + 1:
#             crop_img = img[yp_list[i]:yp_list[i+1], xp_list[i]: xp_list[i+1]]
#             # cv2.imwrite('/home/barcelona/pervinco/test_code/test/' + str(time.time()) + '.jpg', crop_img)
#             # del(yp_list[0])
#             # del(xp_list[0])
#         else:
#             pass


def move(img, xp_list, yp_list):
    # y_reverse = list(reversed(yp_list))
    # print(xp_list, y_reverse)
    x, y = xp_list, yp_list
    while len(x) != 0:
        for i in range(0, len(xp_list)):
            cv2.circle(img, (x[i]+80, y[i]), 5, (255, 255, 255), -1)

        y_reverse = list(reversed(y))
        del(x[i])
        del(y_reverse[i])
        y = list(reversed(y_reverse))

        print(x, y)
